{"version":3,"sources":["Forms.jsx","App.js","reportWebVitals.js","index.js"],"names":["Forms","react_default","a","createElement","className","align","style","textAlign","action","type","placeholder","href","ThemeContext","createContext","App","_useState","useState","_useState2","Object","slicedToArray","theme","setTheme","toggleTheme","curr","Provider","value","id","padding","react_switch_default","onChange","checked","src_Forms","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"yLAsBeA,MApBf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAMC,MAAM,UAA1B,8CACAJ,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAACC,UAAU,WAAtB,8BACGN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAMC,MAAM,UAA1B,eACHJ,EAAAC,EAAAC,cAAA,QAAMK,OAAO,GAAGJ,UAAU,SACtBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWK,KAAK,OAAOC,YAAY,qBACpDT,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWK,KAAK,WAAWC,YAAY,qBACxDT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASE,MAAO,CAACC,UAAU,WAAxC,WAGAN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASE,MAAO,CAACC,UAAU,WACpCN,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,KAAR,wCCNHC,EAAeC,wBAAc,QAgC3BC,MA9Bf,WAAe,IAAAC,EACYC,mBAAS,SADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPK,EADOH,EAAA,GACAI,EADAJ,EAAA,GAERK,EAAc,WAClBD,EAAS,SAACE,GAAD,MAAkB,UAATA,EAAmB,OAAS,WAG/C,OAEFtB,EAAAC,EAAAC,cAACS,EAAaY,SAAd,CAAuBC,MAAO,CAACL,QAAOE,gBACtCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOsB,GAAIN,GAEtBnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASE,MAAO,CAACqB,QAAQ,MAAMpB,UAAU,WAExDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,gCAEAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOG,MAAO,CAACC,UAAU,WACX,SAATa,EAAmB,YAAc,aAEpCnB,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAa2B,SAAUP,EAAaQ,QAAmB,SAAVV,MAI/CnB,EAAAC,EAAAC,cAAC4B,EAAD,SCtBWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACP7C,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,WAAP,KACE9C,EAAAC,EAAAC,cAAC6C,EAAD,OAEFC,SAASC,eAAe,SAM1BlB","file":"static/js/main.26d325c2.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Forms() {\n  return (\n    <div className='div-form px-2' >\n        <h2 className='sign'align=\"center\">Welcome to our Light/Dark Toggling Website</h2>\n        <h6 style={{textAlign:\"center\"}}>Sponsored by UdeyCraze.com</h6>\n           <h2 className='sign'align=\"center\">--Sign In--</h2>\n        <form action=\"\" className='form1'>\n            <input className='username' type=\"text\" placeholder='Austin Gareth...'/>\n            <input className='password' type='password' placeholder='Password here...'/>\n            <a className='submit' style={{textAlign:\"center\"}}>\n               Sign In\n            </a>\n            <p className='forgot' style={{textAlign:\"center\"}}>\n                <a href='#'>Forgot Password?</a>\n            </p>\n        </form>\n    </div>\n  )\n}\n\nexport default Forms","import React, { createContext, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"bootstrap/dist/js/bootstrap.js\"\nimport 'font-awesome/css/font-awesome.min.css';\nimport './App.css'\nimport Forms from \"./Forms\";\nimport ReactSwitch from \"react-switch\";\n\n\nexport const ThemeContext = createContext(\"null\")\n\nfunction App() {\n const [theme, setTheme] = useState(\"light\")\n const toggleTheme = () =>{\n   setTheme((curr)=>(curr === \"light\" ? \"dark\" : \"light\"))\n }\n\n  return (\n\n<ThemeContext.Provider value={{theme, toggleTheme}}>\n<div className=\"App \" id={theme}>\n  \n    <div className=\"switch\" style={{padding:'5px',textAlign:'center'}}>\n    \n    <div className=\"instrc\">Click on the Toggling Button</div>\n   \n    <div>\n    <label style={{textAlign:'center'}}>\n        {theme == \"light\" ? \"Ligh Mode\" : \"Dark Mode\"}\n      </label>\n      <ReactSwitch onChange={toggleTheme} checked={theme === \"dark\"}/>\n      </div>\n    </div>\n     \n    <Forms/>\n\n</div>\n</ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}